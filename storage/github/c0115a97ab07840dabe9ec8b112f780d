C:28:"Guzzle\Http\Message\Response":9891:{{"status":200,"body":"[{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/188702281\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14129#issuecomment-188702281\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14129\",\"id\":188702281,\"user\":{\"login\":\"gkalpak\",\"id\":8604205,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/8604205?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/gkalpak\",\"html_url\":\"https:\/\/github.com\/gkalpak\",\"followers_url\":\"https:\/\/api.github.com\/users\/gkalpak\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/gkalpak\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/gkalpak\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/gkalpak\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/gkalpak\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/gkalpak\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/gkalpak\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-02-25T10:06:01Z\",\"updated_at\":\"2016-02-25T10:06:01Z\",\"body\":\"It would depend on the implementation of the controller. There is nothing implying that there is an `$onInit()` method. (Or did I miss something ?)\\r\\n\\r\\nBut it does seem like the tests are out-of-sync with the actual implementation of the `HeroDetailController`... (e.g. there is no initialization in the actual controller).\\r\\n\\r\\n@arch-lm, would you like to submit a PR for that ?\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192603122\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14129#issuecomment-192603122\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14129\",\"id\":192603122,\"user\":{\"login\":\"drpicox\",\"id\":2758345,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/2758345?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/drpicox\",\"html_url\":\"https:\/\/github.com\/drpicox\",\"followers_url\":\"https:\/\/api.github.com\/users\/drpicox\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/drpicox\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/drpicox\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/drpicox\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/drpicox\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/drpicox\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/drpicox\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/drpicox\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/drpicox\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-05T07:58:07Z\",\"updated_at\":\"2016-03-05T08:12:18Z\",\"body\":\"There are three options:\\r\\n\\r\\n  - stay like now, which is safe because if it calls `$onInit` there is a risk that given component uses `require` controllers and there is not enough information available (it is just constructing one isolated controller, there are no parents or other requirement structure)\\r\\n\\r\\n  - call `$onInit` assuming that there will be no `require` controllers, and throw an exception if there are in fact `require` controllers\\r\\n\\r\\n  - allow additional configuration of `$componentController` with `require` controllers instances (mocks, ...) and then call `$onInit`.We already have the bindings parameter and it is likely that we can add the `require` controllers instances, but by doing that we cannot test the two stages in the initialization: one with bindings (constructor), another with requires($onInit). So it should be an extra argument, the fifth... too many arguments.\\r\\n\\r\\nI do not have yet in my mind which of one is best for now.\\r\\n\\r\\nI'm thinking that `$componentController` should have tests for ES6 classes, because it seems to deal different with bindings (as I understand from documentation it says that they follow the same cycle of life than `require` controller instances). May be should be better to assume that everything follows ES6 classes cycle of life in the `$componentController` so bindings can have `require` controllers, so no fifth argument.\\r\\n \"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192607877\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14129#issuecomment-192607877\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14129\",\"id\":192607877,\"user\":{\"login\":\"drpicox\",\"id\":2758345,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/2758345?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/drpicox\",\"html_url\":\"https:\/\/github.com\/drpicox\",\"followers_url\":\"https:\/\/api.github.com\/users\/drpicox\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/drpicox\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/drpicox\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/drpicox\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/drpicox\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/drpicox\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/drpicox\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/drpicox\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/drpicox\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-05T08:33:16Z\",\"updated_at\":\"2016-03-05T08:33:16Z\",\"body\":\"Uhmmm after think a little bit I arrived to the following:\\r\\n\\r\\n- changing `$componentController` to execute `$onInit` will be a breaking change (in tests so all breaks should be likely to be detected, and it can be considered to have low affectation)\\r\\n\\r\\n- it makes no sense (or low sense) to execute `$onInit`, I explain it: **`$componentController` is to instance controllers** a kind of replacement for `$controller`, but instead of creating instances of controllers registered by the `controllerProvider` it creates instances of controllers _registered_ through directives (the ones that satisfies a component definition). So, once you have the instance of the controller, you can call manually `$onInit`, and all the lifecycle of your controller, the idea is that you are testing a controller, not a directive (and its relationships). \"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192640406\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14129#issuecomment-192640406\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14129\",\"id\":192640406,\"user\":{\"login\":\"gkalpak\",\"id\":8604205,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/8604205?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/gkalpak\",\"html_url\":\"https:\/\/github.com\/gkalpak\",\"followers_url\":\"https:\/\/api.github.com\/users\/gkalpak\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/gkalpak\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/gkalpak\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/gkalpak\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/gkalpak\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/gkalpak\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/gkalpak\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-05T13:08:55Z\",\"updated_at\":\"2016-03-05T13:08:55Z\",\"body\":\"Good thinking :smiley: `$onInit` (and the lifecycle hooks in general) are related to directives. They are not specific to components (in contrast to `$componentController`) and not specific to controllers outside of the context or a directive.\\r\\n\\r\\n`$componentController` does also support locals, so one could set required controllers and manually invoke `$onInit` if they need to. IMO, the current behavior is fine.\\r\\n\\r\\n --\\r\\nStill, if someone wanted to submt a PR for https:\/\/github.com\/angular\/angular.js\/issues\/14129#issuecomment-188702281, that would be awesome :smiley:\"}]","headers":{"Server":["GitHub.com"],"Date":["Tue, 08 Mar 2016 07:27:18 GMT"],"Content-Type":["application\/json; charset=utf-8"],"Content-Length":["8070"],"Status":["200 OK"],"X-RateLimit-Limit":["5000"],"X-RateLimit-Remaining":["4946"],"X-RateLimit-Reset":["1457423538"],"Cache-Control":["private, max-age=60, s-maxage=60"],"Vary":["Accept, Authorization, Cookie, X-GitHub-OTP","Accept-Encoding"],"ETag":["\"f25a160c3fa79d6a80c5a06e82cfc7bf\""],"X-GitHub-Media-Type":["github.v3; format=json"],"Access-Control-Expose-Headers":["ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"],"Access-Control-Allow-Origin":["*"],"Content-Security-Policy":["default-src 'none'"],"Strict-Transport-Security":["max-age=31536000; includeSubdomains; preload"],"X-Content-Type-Options":["nosniff"],"X-Frame-Options":["deny"],"X-XSS-Protection":["1; mode=block"],"X-Served-By":["13d09b732ebe76f892093130dc088652"],"X-GitHub-Request-Id":["C5E8F8E0:10EA0:50ECD30:56DE7ED5"]}}}