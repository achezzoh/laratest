C:28:"Guzzle\Http\Message\Response":13025:{{"status":200,"body":"[{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192184712\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-192184712\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":192184712,\"user\":{\"login\":\"Narretz\",\"id\":1153097,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/1153097?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/Narretz\",\"html_url\":\"https:\/\/github.com\/Narretz\",\"followers_url\":\"https:\/\/api.github.com\/users\/Narretz\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/Narretz\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/Narretz\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/Narretz\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/Narretz\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/Narretz\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/Narretz\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/Narretz\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/Narretz\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-04T08:37:50Z\",\"updated_at\":\"2016-03-04T08:37:50Z\",\"body\":\"Thanks for the report. I guess it's a bug, even though the use case is pretty rare.\\r\\n\\r\\nDo you want to open a PR with your suggested fix?\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192198800\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-192198800\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":192198800,\"user\":{\"login\":\"mattlewis92\",\"id\":6425649,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/6425649?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/mattlewis92\",\"html_url\":\"https:\/\/github.com\/mattlewis92\",\"followers_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/mattlewis92\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-04T09:16:47Z\",\"updated_at\":\"2016-03-04T09:16:47Z\",\"body\":\"Sure thing, will put something together over the next few days\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/192234873\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-192234873\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":192234873,\"user\":{\"login\":\"lgalfaso\",\"id\":391394,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/391394?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/lgalfaso\",\"html_url\":\"https:\/\/github.com\/lgalfaso\",\"followers_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-04T11:03:54Z\",\"updated_at\":\"2016-03-04T11:03:54Z\",\"body\":\"I think that putting together a fix will be quite difficult without a lot more machinery. Here is a harder example\\r\\n\\r\\n```js\\r\\nclass Foo {\\r\\n  test() {\\r\\n    class Bar {\\r\\n      constructor() {} \/\/ No not pick this one\\r\\n    }\\r\\n    \\\"constructor() {}\\\" \/\/ nor this one\\r\\n  }\\r\\n  \\\"constructor\\\"($rootScope) {} \/\/ but this one (as an extra quirk, remember that the function name can be in quotes)\\r\\n}\\r\\n```\\r\\n\\r\\nand a few other cases that are not supported in Chrome but are in Firefox\\r\\n```js\\r\\nclass Foo {\\r\\n  [\\\"const\\\" + \\\"ructor\\\"]($rootScope) {}\\r\\n}\\r\\n```\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/193459172\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-193459172\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":193459172,\"user\":{\"login\":\"dcherman\",\"id\":976608,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/976608?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/dcherman\",\"html_url\":\"https:\/\/github.com\/dcherman\",\"followers_url\":\"https:\/\/api.github.com\/users\/dcherman\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/dcherman\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/dcherman\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/dcherman\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/dcherman\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/dcherman\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/dcherman\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/dcherman\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/dcherman\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-07T21:27:14Z\",\"updated_at\":\"2016-03-07T21:34:07Z\",\"body\":\"@lgalfaso Shouldn't be as bad as you think, although it's probably not that great either (didn't profile this at all).\\r\\n```js\\r\\n\\r\\nif (isClass(fn)) {\\r\\n  fn.toString()\\r\\n    \/\/ Extract the body of the class\\r\\n    \/\/ TODO: Don't match destructuring syntax\\r\\n    .match(\/{(.*)}\/)[1]\\r\\n\\r\\n    \/\/ Remove the body of all functions contained within the class\\r\\n    \/\/ so that we don't match inner constructors\\r\\n    .replace(\/{.*?}\/g, '')\\r\\n\\r\\n    \/\/ Find the constructor in the list of functions that remain since it may not be\\r\\n    \/\/ the first one in the list\\r\\n    .match(\/constructor\\\\s?\\\\([\\\\s\\\\S]*?\\\\)\/)[0]\\r\\n\\r\\n    \/\/ Extract the arguments\\r\\n    .match(\/^[^\\\\(]*\\\\(\\\\s*([^\\\\)]*)\\\\)\/m)\\r\\n}\\r\\n```\\r\\n\\r\\nIn Firefox 45B, calling `toString` on a class constructor doesn't contain the `class` keyword, so it would continue to follow the non-class DI code.  My biggest concern here is the toString() format since I don't think it's defined by the spec (or at least I couldn't find it).\\r\\n\\r\\nAs for your concern about \\r\\n\\r\\n```js\\r\\nclass Foo {\\r\\n  [\\\"const\\\" + \\\"ructor\\\"]($rootScope) {}\\r\\n}\\r\\n```\\r\\n\\r\\nI just tried that in Firefox, and the constructor isn't invoked on `new` which may be a bug.  That said, I think it would be acceptable to say that the injector isn't meant to play hide and seek with your constructor; if you want to do that, use explicit annotation.\\r\\n\\r\\n**Edit**\\r\\n\\r\\nAlso, the `constructor` string would presumably report as the whole output in Chrome rather than the bracket notation, but would need Chrome support to assert that.\\r\\n\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/193484903\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-193484903\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":193484903,\"user\":{\"login\":\"lgalfaso\",\"id\":391394,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/391394?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/lgalfaso\",\"html_url\":\"https:\/\/github.com\/lgalfaso\",\"followers_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/lgalfaso\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-07T22:28:49Z\",\"updated_at\":\"2016-03-07T22:28:49Z\",\"body\":\"@dcherman I think you are looking for http:\/\/www.ecma-international.org\/ecma-262\/6.0\/#sec-function.prototype.tostring at *toString Representation Requirements*\\r\\n\\r\\nThat said, if this can be done reasonable easy, then that is fine with me. The only thing I would not want to end with is with a full ES6 syntax parser to support this.\\r\\n\\r\\n\"},{\"url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/comments\/193490885\",\"html_url\":\"https:\/\/github.com\/angular\/angular.js\/issues\/14175#issuecomment-193490885\",\"issue_url\":\"https:\/\/api.github.com\/repos\/angular\/angular.js\/issues\/14175\",\"id\":193490885,\"user\":{\"login\":\"gkalpak\",\"id\":8604205,\"avatar_url\":\"https:\/\/avatars.githubusercontent.com\/u\/8604205?v=3\",\"gravatar_id\":\"\",\"url\":\"https:\/\/api.github.com\/users\/gkalpak\",\"html_url\":\"https:\/\/github.com\/gkalpak\",\"followers_url\":\"https:\/\/api.github.com\/users\/gkalpak\/followers\",\"following_url\":\"https:\/\/api.github.com\/users\/gkalpak\/following{\/other_user}\",\"gists_url\":\"https:\/\/api.github.com\/users\/gkalpak\/gists{\/gist_id}\",\"starred_url\":\"https:\/\/api.github.com\/users\/gkalpak\/starred{\/owner}{\/repo}\",\"subscriptions_url\":\"https:\/\/api.github.com\/users\/gkalpak\/subscriptions\",\"organizations_url\":\"https:\/\/api.github.com\/users\/gkalpak\/orgs\",\"repos_url\":\"https:\/\/api.github.com\/users\/gkalpak\/repos\",\"events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/events{\/privacy}\",\"received_events_url\":\"https:\/\/api.github.com\/users\/gkalpak\/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-03-07T22:48:04Z\",\"updated_at\":\"2016-03-07T22:48:04Z\",\"body\":\"I feel like a RegExps will only take us so far. E.g. @dcherman's will break with something like:\\r\\n\\r\\n```\\r\\nclass Foo {\\r\\n  test() {\\r\\n    class Bar {\\r\\n      prop = {};\\r\\n      constructor() {}\\r\\n    }\\r\\n  }\\r\\n  constructor(arg1, arg2) {}\\r\\n}\\r\\n```\\r\\n\\r\\nI think we all agree that we don't want to support every wicked usecase.\\r\\nI suggest looking for the first `\/constructor\\\\s*\\\\(([^)]*)\\\\)\/` match and just have a warning in the docs that inorder for DI to work for un-annotated class constructor, the class' constructor needs to be the first `constructor` occurence (and not have quotes etc).\"}]","headers":{"Server":["GitHub.com"],"Date":["Tue, 08 Mar 2016 07:27:11 GMT"],"Content-Type":["application\/json; charset=utf-8"],"Content-Length":["10670"],"Status":["200 OK"],"X-RateLimit-Limit":["5000"],"X-RateLimit-Remaining":["4963"],"X-RateLimit-Reset":["1457423538"],"Cache-Control":["private, max-age=60, s-maxage=60"],"Vary":["Accept, Authorization, Cookie, X-GitHub-OTP","Accept-Encoding"],"ETag":["\"31cc917c0c09820fb5d93ec21f6eb9cd\""],"X-GitHub-Media-Type":["github.v3; format=json"],"Access-Control-Expose-Headers":["ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"],"Access-Control-Allow-Origin":["*"],"Content-Security-Policy":["default-src 'none'"],"Strict-Transport-Security":["max-age=31536000; includeSubdomains; preload"],"X-Content-Type-Options":["nosniff"],"X-Frame-Options":["deny"],"X-XSS-Protection":["1; mode=block"],"X-Served-By":["7f48e2f7761567e923121f17538d7a6d"],"X-GitHub-Request-Id":["C5E8F8E0:10EA0:50EC5D1:56DE7ECF"]}}}